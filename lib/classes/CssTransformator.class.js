"use strict";const _=require("lodash"),debug=require("debug")("Crittr CSSTransformator"),log=require("signale"),merge=require("deepmerge"),css=require("css"),Rule=require("./Rule.class");class CssTransformator{constructor(e){e=e||{},this.options={silent:!0,source:null},this.options=merge(this.options,e);this._TYPES_TO_REMOVE=["comment","keyframes","keyframe"],this._TYPES_TO_KEEP=["charset","font-face"];const s=[":before",":after",":visited",":first-letter",":first-line"].map(e=>":?"+e).join("|");this._PSUEDO_SELECTOR_REGEXP=new RegExp(s,"g")}getAst(e){let s=null;try{debug("getAst - Try parsing css to ast ..."),s=css.parse(e,{silent:this.options.silent,source:this.options.source}),debug("getAst - Css successfully parsed to ast ...")}catch(e){log.error(e)}return s}getCssFromAst(e){return css.stringify(e,{indent:"  ",compress:!1,sourcemap:!0,inputSourcemaps:!0})}filterSelector(e,s){if(!Array.isArray(s))return log.warn("removeSelectors have to be an array to be processed"),!1;let t=e;e.stylesheet?t=e.stylesheet.rules:e.rules&&(t=e.rules);const r=(e,s)=>s-e,l=[];for(const e in t)if(t.hasOwnProperty(e)){const o=t[e];if(Rule.isMediaRule(o))this.filterSelector(o,s);else{const t=o.selectors,i=[];for(let r in t)if(t.hasOwnProperty(r)){const o=t[r];s.includes(o)&&(t.length>1?i.push(r):l.push(e))}i.sort(r);for(let e of i)t.splice(e,1)}}l.sort(r);for(let e of l)t.splice(e,1);return e}filterByMap(e,s){let t=JSON.parse(JSON.stringify(e)),r=JSON.parse(JSON.stringify(e));const l=t.stylesheet,o=r.stylesheet;let i=[];const n=new Map,u=(e,s,t)=>{s=s||"";const r=Rule.generateRuleKey(e,s);if(t.has(r)){const s=t.get(r);return e.selectors.filter(e=>s.selectors.includes(e))}return[]};let c=l.rules.filter(e=>!this._TYPES_TO_REMOVE.includes(e.type));c=(c=c.map((e,t,r)=>{if("media"===e.type)e.rules&&(e.rules=e.rules.map(t=>{const r=Rule.generateRuleKey(t,e.media);return t.selectors=u(t,e.media,s),n.set(r,t.selectors),t}).filter(e=>void 0!==e.selectors&&e.selectors.length>0),0===e.rules.length&&i.push(e));else if("rule"===e.type){const t=Rule.generateRuleKey(e);e.selectors=u(e,"",s),n.set(t,e.selectors),0===e.selectors.length&&i.push(e)}return e})).filter(e=>!i.includes(e)),i=[];let a=o.rules.map(e=>{const s="media"===e.type?e.media:"";if("media"===e.type)e.rules&&(e.rules=e.rules.map(e=>{const t=Rule.generateRuleKey(e,s);if(n.has(t)){const s=n.get(t);e.selectors=e.selectors.filter(e=>!s.includes(e))}return e}).filter(e=>void 0!==e.selectors&&e.selectors.length>0),0===e.rules.length&&i.push(e));else if("rule"===e.type){const t=Rule.generateRuleKey(e,s);if(n.has(t)){const s=n.get(t);e.selectors=e.selectors.filter(e=>!s.includes(e))}0===e.selectors.length&&i.push(e)}return e});return a=a.filter(e=>!(i.includes(e)||this._TYPES_TO_KEEP.includes(e.type))),l.rules=c,o.rules=a,[t,r]}}module.exports=CssTransformator;